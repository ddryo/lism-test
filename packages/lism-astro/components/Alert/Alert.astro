---
import { LismProps } from '../types';
import { Layouter } from '../Core';
import { Icon } from '../Icon';
import { SideFlex } from '../Flex';
import AlertPresets from '@loos/lism-core/src/components/Alert/presets';

// const _default = defaultProps?.Alert || {};

// Propsの定義
interface Props extends LismProps {
	as?: any;
	tag?: string;
}

let {
	lismClass = {},
	// lismStyle = {},
	isFlow,
	variant,
	icon,
	keycolor,
	preset = 'alert',
	iconProps = {},
	children,
	...props
} = Astro.props || {};

lismClass.c = 'c--alert';
if (variant) lismClass.c += ` c--alert--${variant}`;

const presetData = preset ? AlertPresets[preset] : null;

if (presetData) {
	keycolor = keycolor || presetData.color || null;
	icon = icon || presetData.icon || null;
	iconProps.label = iconProps.label || presetData.label || null;
}
---

<SideFlex
	fix='first'
	lismState={['has--mixcolor']}
	lismClass={lismClass}
	keycolor={keycolor}
	radius='2'
	{...props}
>
	<Icon lismClass={{ c: 'c--alert__icon is--side' }} icon={icon} {...iconProps} />
	<Layouter className='c--alert__body' isFlow={isFlow}>
		<slot />
	</Layouter>
</SideFlex>
