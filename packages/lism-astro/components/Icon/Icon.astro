---
import { LismProps } from '../types';
import { getLismProps } from '@loos/lism-core/lib';
import getProps from '@loos/lism-core/src/components/Icon/getProps';
import SVG from './SVG.astro';

// Propsの定義
interface Props extends LismProps {
	// icon?: any;
	// name?: string;
	// preset?: string;
	// emoji?: string;
	// size?: string | number;
	// scale?: string | number;
	// viewBox?: string;
	// label?: string;
	isInline?: boolean;
}

let { lismClass = {}, asProps = {}, variant, isInline, ...props } = Astro.props || {};

lismClass.e = 'e--icon';
if (isInline) lismClass.e += ' e--icon--inline';
if (variant) lismClass.e += ` e--icon--${variant}`;

const hasChildren = Astro.slots.has('default');

let { as, iconProps, props: otherProps } = getProps(props, hasChildren);
const IconComp = '_SVG_' === as ? SVG : as;

const lismProps = getLismProps({ lismClass, ...otherProps });
---

<IconComp {...lismProps} {...iconProps} {...asProps}>
	{hasChildren && <slot />}
</IconComp>
