@layer lism-module {
	.c--button {
		--keycolor: var(--b900);
		--icon--scale: 1.25; // offsetとバランス合わせる
		--icon--offset: 0%; //25%;

		// default(fill)用
		--bgc: var(--keycolor);
		--bdc: var(--bgc); // reverse用
		--c: var(--c--filled); // filledColor?
	}

	// デフォルトスタイル
	.c--button:not([class*='c--button--']) {
		--rev--bgc: transparent;
	}

	// c--button--style
	.c--button--outline {
		--bgc: transparent;
		--bdc: var(--keycolor);
		--c: var(--bdc); // bdc上書きするだけで --c も変わるように

		// .-hov:reverse用
		--rev--c: var(--hov--c, var(--c--filled));
		// --rev--bgc: var(--bdc);
	}

	// c--button--style
	.c--button--ghost {
		--c: var(--keycolor);
		--bdc: transparent;
		--bgc: transparent;

		// .-hov:reverse用
		--rev--c: var(--hov--c, var(--c--filled));
	}
}

// py は小さめにして、minHで最低限の高さを確保.
.c--button {
	:where(&) {
		padding-block: var(--em--3); // .375em
		padding-inline: var(--em--10); // 1em
		gap: var(--em--4); // --gap--icon ?
		// line-height: 1.25;
	}
	text-decoration: none;
	width: fit-content;
	color: var(--c);
	background-color: var(--bgc);
	border: solid 1px var(--bdc); // アウトラインと並べたときにサイズに差がでないように
	min-block-size: 3em;
	// min-width: 2em;
}

// .c--button.l--grid,
.c--button.l--grid {
	// display: grid;
	// --gta: 'left center right';
	--gtc: 1em 1fr 1em;
}
.l--grid > .c--button__text {
	justify-self: center;
	// grid-area: center;
}

.c--button__icon {
	scale: var(--icon--scale);
	flex-shrink: 0;

	&[data-position='left'] {
		// grid-area: left;
		translate: calc(0px - var(--icon--offset));
	}
	&[data-position='right'] {
		// grid-area: right;
		translate: var(--icon--offset);
	}
}
