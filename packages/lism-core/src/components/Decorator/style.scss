// 役割がはっきりしているので、is--flex なし ?
:where(.e--decorator) {
	--size: 1em;
	width: var(--size);
	height: var(--size);
}
.e--decorator {
	display: block;
}

// .d--text {}

.e--decorator[data-type='call'] {
	width: 1px;
}
.d--text[data-variant='balloon'] {
	--bgc: #fff;
	--bdc: currentColor;
	background: none;
}
[data-variant='balloon'] > .d--text__content {
	border: solid 1px var(--bdc);
	background-color: var(--bgc);
}
.e--decorator[data-type='balloon'] {
	border: solid 1px var(--bdc);
	background-color: var(--bgc);
	translate: var(--trnsltX) var(--trnsltY);
}
.e--decorator[data-type='balloon'][data-dir*='left-'] {
	clip-path: polygon(0% 0%, 0% 100%, 100% 0%);
	--trnsltX: 1px;
	--trnsltY: -25%;
}
.e--decorator[data-type='balloon'][data-dir*='right-'] {
	clip-path: polygon(0% 0%, 100% 100%, 100% 0%);
	--trnsltX: -1px;
	--trnsltY: -25%;
}

.e--decorator[data-type='balloon'][data-dir*='bottom-'] {
	clip-path: polygon(0% 0%, 0% 100%, 100% 100%);
	--trnsltX: -25%;
	--trnsltY: -1px;
	// translate: -25% -1px;
}
.e--decorator[data-type='balloon'][data-dir*='top-'] {
	clip-path: polygon(0% 0%, 0% 100%, 100% 0%);
	--trnsltX: -25%;
	--trnsltY: 1px;
}

.d--text[data-variant='sticky'] {
	--bgc: var(--c--lightgray);
	--bdc: var(--c--gray);
	--c: #000;
	// border-color: currentColor;
	// border-left: 8px solid currentColor;
}
[data-variant='sticky'] > .d--text__content {
	border-left: 0.5em solid var(--bdc);
	width: fit-content;
	min-width: 8em;
	max-width: 30em;

	&::before {
		position: absolute;
		bottom: 4px;
		right: 8px;
		z-index: -1;

		min-width: 4em;
		width: 40%;
		// max-width: 50%;
		height: 60%;
		background-color: rgb(var(--shadow--color) / 0.2);
		transform: rotate(5deg);
		transform-origin: left bottom;
		content: '';
		filter: blur(4px);
	}
}
.d--text[data-variant='grid'] {
	--grid-color: color-mix(in srgb, currentColor, transparent 92%);
	background-image: linear-gradient(
			transparent calc(100% - 1px),
			var(--grid-color) 50%,
			var(--grid-color)
		),
		linear-gradient(
			90deg,
			transparent calc(100% - 1px),
			var(--grid-color) 50%,
			var(--grid-color)
		);
	background-repeat: repeat;
	background-size: 16px 16px;
	background-position: 8px 8px;
}

.d--text[data-variant='stripe'] {
	--stripe-color: color-mix(in srgb, currentColor, transparent 92%);
	--stripe-deg: 60deg;
	background-image: repeating-linear-gradient(
		var(--stripe-deg),
		var(--stripe-color),
		var(--stripe-color) 1px,
		transparent 1px,
		transparent 7px
	);
}

.d--text[data-variant='emphasis'] {
	--decorator-size: 0.5em;
	> .d--text__content {
		line-height: 1.625;
		margin-top: var(--decorator-size);
		margin-inline: var(--decorator-size);
	}
}

.e--decorator[data-type='emphasis'] {
	width: 1px;
	height: var(--decorator-size);
	translate: var(--decorator-size) 50%;

	&[data-dir='right'] {
		translate: calc(0px - var(--decorator-size)) 50%;
	}
	&::before,
	&::after {
		content: '';
		display: block;
		width: 1px;
		height: 88%;
		position: absolute;
		background-color: inherit;
		transform-origin: bottom;
	}
	&::before {
		bottom: -0.125em;
		left: -0.5em;
		rotate: -30deg;
	}
	&::after {
		bottom: -0.125em;
		right: -0.5em;
		rotate: 30deg;
	}
}

//
.d--text[data-variant='kakko'] {
}

.e--decorator[data-type='kakko'] {
	border-color: currentColor;
	border-top: 1px solid;
	border-left: 1px solid;
}

.e--decorator[data-type='big-kakko'][data-dir='lr'] {
	border: 1px solid currentColor;
	border-right-width: 0;
}
.e--decorator[data-type='big-kakko'][data-dir='tb'] {
	border: 1px solid currentColor;
	border-bottom-width: 0;
}

// .e--decorator[data-type="kakko"][data-dir="lr"]{
// 	border-top: 1px solid;
// 	border-left: 1px solid;
// }
// .e--decorator[data-type="kakko"][data-dir="tb"]{
// 	border-top: 1px solid;
// 	border-right: 1px solid;
// }
// .e--decorator[data-type="kakko"][data-i="2"]{
// 	rotate: 180deg;
// }

// :root{
// 	--glass--blur: 40px;
// }

// 黒い影部分は上書きできるように。
:where(.-bg\:glass) {
	--bxsh: 0 0 0 transparent;
	// --bxsh: var(--shadow--1);
	--bdrs: var(--radius--4);
}

// 白の1pxボーダーは、透過白背景をグラデーションにするとバグるのでborderではなくshadowで。

.-bg\:glass {
	backdrop-filter: brightness(1.1) blur(var(--glass--blur, 20px));
	// <FilterLayer brightness="1.1"/>
	border-radius: var(--bdrs);

	// text-shadow: .5px 1px rgb(0 0 0 / 4%);
	text-shadow:
		0.5px 1px rgba(0, 0, 0, 0.05),
		0px -0.5px rgba(255, 255, 255, 0.05);
}

.-bg\:glass {
	background-color: transparent;
	// background-image: linear-gradient(150deg, rgba(#fff, 0.1) 0%, rgba(#fff, 0) 100%);
	box-shadow:
		inset 0 0 0 1px rgb(255 255 255 / 30%),
		inset 1px 2px 8px 1px rgb(255 255 255 / 5%),
		var(--bxsh);
}
// .-bg\:glass{
// 	// background-color: rgba(#fff, 0.2);

// 	border-radius: var(--bdrs);
// 	border: 1px solid rgba(255, 255, 255, 0.4);
// 	border-left-color: rgba(255, 255, 255, 0.35);
// 	border-right-color: rgba(255, 255, 255, 0.25);
// 	border-bottom-color: rgba(255, 255, 255, 0.2);
// 	text-shadow: .5px 1px rgb(0 0 0 / 4%);
// }
