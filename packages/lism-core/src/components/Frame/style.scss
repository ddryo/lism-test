.l--frame {
	// --d: 1; // 幅
	// --n: 1; // 高さ
	// height: fit-content; // grid系直下においた時などに、align-items: strech; の影響で引き伸ばされないようにする
	// overflow: hidden; // radiusが見えるように

	--lism: 16/9;
	aspect-ratio: var(--lismVal);

	display: block;
	position: relative;
	overflow-y: auto;
	width: 100%;
	height: auto;
	object-fit: cover;

	// > img, video{
	// 	width: 100%;
	// 	height: 100%;
	// 	object-fit: cover;
	// 	display: block;
	// }

	&[data-ratio='1/1'] {
		--lism: 1/1;
	}
	&[data-ratio='16/9'] {
		--lism: 16/9;
	}
	&[data-ratio='2/1'] {
		--lism: 2/1;
	}
	&[data-ratio='4/3'] {
		--lism: 4/3;
	}
	&[data-ratio='3/2'] {
		--lism: 3/2;
	}
	&[data-ratio='golden'] {
		--lism: 16.18/10;
	}
	&[data-ratio='silver'] {
		--lism: 14.14/10;
	}
	&[data-ratio='bronze'] {
		--lism: 33.03/10;
	}
	&[data-ratio='ogp'] {
		--lism: 1.91/1;
	}

	// &[data-direction="portrait"]{
	// 	aspect-ratio: calc(1 / var(--ratio));
	// }
}

.l--frame > :where(img, video) {
	width: 100%;
	height: 100%;
	object-fit: cover;
	display: block;
}

// ::before でやらないのは、ブロックエディターを考慮 しているため
// .l--frame__placeholder{
// 	padding-bottom: calc(var(--n) / var(--d) * 100%);
// }

// 縦横比を反転して縦長にする
// [data-direction="portrait"] > .l--frame__placeholder{
// 	padding-bottom: calc(var(--d) / var(--n) * 100%);
// }
