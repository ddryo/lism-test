/* ------------------------------------------------------------
	グローバルトークン。
	特定のセレクタに対する変数: --[target--]prop
	プリセット変数: --{prop}-{variant}
	
	ローカルな変数について
		自身のプロパティ: --{prop}
		子要素: --{item}--{prop}
			--rev--c, --icon--offset, --item--minW
 ------------------------------------------------------------ */

/* ------------------------------------------------------------
	段階的な値は基本的に
	　→ 0,10,20,30,...
	  → why? → 間を増やせるように、1,2,3,... ではなく10単位ベース

	レイヤー的な段階値
	  → 0, 1,2,3..., -1,-2,...

	カラーの段階値は 100,200,300 ?　→ 10,20,...に揃えてもいいか。

	真ん中のデフォルト値があって、そこから見て小さいか大きいか
	 →　l, xl. 2xl, ...
	 → s, xs, 2xs, ...
	 - ベース = m or r

 ------------------------------------------------------------ */

:root {
	/* ------------------------------------------------------------
	  コンテンツサイズ: ユーザー側で定義が必要
	    コンテンツサイズは960 ~ 1120 くらいがよさそう.
	    1080 にしてるのは、 1920 * 1080画像がきれいに配置できるため？
	------------------------------------------------------------ */
	// コンテンツサイズは960 ~ 1120 くらいがよさそう. @lg よりは大きく?
	// --size--xl: 1600px;
	--size--l: 1440px; // = --wp--style--global--wide-size. alignwide で使う.
	--size--m: 1120px; // = --wp--style--global--content-size.
	--size--s: 45rem; // slim幅1カラムテンプレートで使う. fz:16px時 = 720px
	// --size--xs: 30rem;

	--size--item: 16em; // タイルグリッドなどのアイテムサイズの標準値
	// --size--base: var(--size--m); // = --wp--style--global--content-size.

	// --size--s, --size--l

	// --contentSize--full: 特殊

	// コンテンツの左右の余白
	// --gutter: 2rem;
	--gutter: var(--s--40);

	// ボーダーカラー
	// --ls--bdc--table: #dcdcdc;

	// hoverユーティリティ用 → --ls--?
	--hov--duration: 0.3s;

	/* ------------------------------------------------------------
	    タイポグラフィ
	------------------------------------------------------------ */

	// --ff--sans: sans-serif;
	--ff--serif: serif;
	// --ff--sans: 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', 'Meiryo', sans-serif;
	--ff--sans: -apple-system, 'BlinkMacSystemFont', 'Hiragino Kaku Gothic ProN', 'Hiragino Sans',
		Meiryo, sans-serif, 'Segoe UI Emoji';
	--ff--mono: Menlo, Consolas, monaco, monospace;
	--ff--emoji: 'Apple Color Emoji', 'Segoe UI Emoji', 'Noto Color Emoji', 'Android Emoji',
		'Segoe UI Symbol';

	--ff--base: var(--ff--sans);
	--ff--heading: var(--ff--sans);

	// ------------------------------
	// font-weight
	// ------------------------------
	--fw--bold: 700;
	--fw--thin: 100;

	// ------------------------------
	// letter-spacing
	// ------------------------------
	// --lts--base: normal; // 0, 0.025
	--lts--s: -0.05em;
	--lts--base: normal;
	--lts--l: 0.05em;
	--lts--xl: 0.25em;

	// --lts---2: -0.05em;
	// --lts---1: -0.025em;
	// --lts--0: 0em;
	// --lts--1: 0.025em;
	// --lts--2: 0.05em;
	// --lts--3: 0.075em;
	// --lts--4: 0.1em;
	// --lts--5: 0.25em;
	// --lts--6: 0.5em;

	// --lts--6: 0.5em;

	// --root--ff: sans-serif;
	// --root--fz: clamp(14px, 4vw, 1rem); // 1rem: ブラウザ標準はほぼ16px
	// --root--fz: clamp(0.875rem, 0.625rem + 1vw, 1rem); // 400 - 600
	// --root--lh: 1.75;

	// ------------------------------
	// font-size 変数
	// ------------------------------
	// font-size 変数
	--fz--root: clamp(0.875rem, 0.625rem + 1vw, 1rem); // 400 - 600
	// --fz--hero?
	--fz--m: 1em; // デフォルトでフォントサイズ 変わっているものを1emにリセットしたい時に必要
	--fz--r: 1rem; // → --fz--base?

	// 倍音列(分子8) での計算値
	--fz--5xl: 4em; //calc(1em * 8 / 2);
	--fz--4xl: 2.667em; // calc(1em * 8 / 3);
	--fz--3xl: 2em; //calc(1em * 8 / 4);
	--fz--2xl: 1.6em; //calc(1em * 8 / 5);
	--fz--xl: 1.333em; //calc(1em * 8 / 6);
	--fz--l: 1.143em; //calc(1em * 8 / 7);
	--fz--s: 0.889em; // calc(1em * 8 / 9);
	--fz--xs: 0.8em; //calc(1em * 8 / 10);
	--fz--2xs: 0.727em; //calc(1em * 8 / 11);

	// --fzMolecule: 8; // 7~9に対応.
	// --fz--5xl: min(5em, calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 6)));
	// --fz--4xl: min(4em, calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 5)));
	// --fz--3xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 4));
	// --fz--2xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 3));
	// --fz--xl: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 2));
	// --fz--l: calc(1em * var(--fzMolecule) / (var(--fzMolecule) - 1));
	// --fz--s: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 1));
	// --fz--xs: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 2));
	// --fz--2xs: calc(1em * var(--fzMolecule) / (var(--fzMolecule) + 3));

	// clampでテキストサイズを変化させたい領域に指定する
	// --fz-fluid--s: clamp(0.9rem, 0.75rem + 0.8cqw, 1rem); // 小さい方向のみ. 300: .9rem ~ 500: 1rem
	// --fz-fluid: clamp(0.9rem, 0.8rem + 0.5cqw, 1.1rem); // 上下両方. 320: .9rem ~ 960: 1.1rem
	// --fz-fluid--l: clamp(1rem, 0.9rem + 0.25cqw, 1.1rem); // 大きい方向のみ 640: 1rem a~ 960: 1.1rem

	// ------------------------------
	// line-height 変数
	// ------------------------------

	// 1~9 だと普通の数値指定と区別がつかない.
	// --lh--10: 1;
	// --lh--20: 1.125;
	// --lh--30: 1.25;
	// --lh--40: 1.375;
	// --lh--50: 1.5;
	// --lh--60: 1.625;
	// --lh--70: 1.75;
	// --lh--80: 1.875;
	// --lh--90: 2;

	--lh--base: 1.75;
	--lh--xs: calc(var(--lh--base) - 0.25);
	--lh--s: calc(var(--lh--base) - 0.125);
	--lh--l: calc(var(--lh--base) + 0.125);
	--lh--xl: calc(var(--lh--base) + 0.25);

	// tight snug - relaxed loose
	// shorter short - tall taller
	// xs s - l xl

	/* ------------------------------------------------------------
	  カラー: ユーザー側で定義できる仕組みも必要
	------------------------------------------------------------ */

	// --color--: 文字色・背景色など共通して採用されるカラー
	--hsl--main: 203 56% 27%;
	--hsl--accent: 346 57% 47%;
	--main: hsl(var(--hsl--main));
	--accent: hsl(var(--hsl--accent));

	// --main--c: #fff; // 背景が main の時の文字色
	// --accent: hsl(346, 57%, 47%);
	// --accent--c: #fff; // 背景が accent の時の文字色
	// --bgc--base: #fdfdfd; // 背景色メイン

	// ベースカラーに合わせたカラーを段階的に用意
	--hs--bc: 215 8%;
	// --hsl--bc: 215 8% 60%;

	// bc50? n50?
	--b50: hsl(var(--hs--bc) 99%);
	--b100: hsl(var(--hs--bc) 96%);
	--b200: hsl(var(--hs--bc) 92%);
	--b300: hsl(var(--hs--bc) 84%);
	--b400: hsl(var(--hs--bc) 72%);
	--b500: hsl(var(--hs--bc) 60%);
	--b600: hsl(var(--hs--bc) 48%);
	--b700: hsl(var(--hs--bc) 36%);
	--b800: hsl(var(--hs--bc) 24%); // 淡い文字色 strong背景色
	--b900: hsl(var(--hs--bc) 8%); // 少しだけ淡い文字色. pre code などで使用
	// --b950: hsl(var(--hs--bc) 8%); // 文字色

	// pale→subtle?

	// --c-: 文字色 に関するセマンティックトークン
	--c--base: var(--b900); // 基本の文字色
	--c--pale: var(--b700); // 薄いテキスト色
	--c--opposite: var(--b50); // 背景色と反転
	--c--filled: #fff; // variant="fill"系の文字色

	// --bgc-: 背景色 に関するセマンティックトークン
	--bgc--base: var(--b50); // 基本の背景色
	--bgc--pale: var(--b100); // 薄い背景色
	// --bgc--medium: var(--b200); // 少し濃い背景色? & ボーダー基本色もデフォルトはこれ
	// --bgc--strong: var(--b900); //
	--bgc--opposite: var(--b900); // テキスト色と反転

	// --bdc-: ボーダー色 に関するセマンティックトークン
	--bdc--base: var(--b300); // 基本ボーダーカラー
	// --bdc--pale: var(--b200); // 薄いボーダーカラー
	// --bdc--strong: var(--b800);

	// --pallete--?
	--hsl--black: 0 0% 0%;
	--hsl--white: 0 0% 100%;
	--hsl--gray: 210 12% 40%;

	--hsl--red: 4 72% 48%;
	--hsl--orange: 28 84% 48%;
	--hsl--yellow: 46 96% 45%;
	--hsl--green: 150 88% 40%;
	--hsl--blue: 205 86% 48%;
	--hsl--purple: 256 72% 52%;
	--hsl--pink: 325 72% 48%;

	--black: hsl(var(--hsl--black));
	--white: hsl(var(--hsl--white));
	--red: hsl(var(--hsl--red));
	--orange: hsl(var(--hsl--orange));
	--yellow: hsl(var(--hsl--yellow));
	--green: hsl(var(--hsl--green));
	--blue: hsl(var(--hsl--blue));
	--purple: hsl(var(--hsl--purple));
	--pink: hsl(var(--hsl--pink));
	--gray: hsl(var(--hsl--gray));

	// --red--c: var(--c--filled);
	// --orange--c: var(--c--filled);
	// --yellow--c: #000;
	// --green--c: #000;
	// --blue--c: var(--c--filled);
	// --purple--c: var(--c--filled);
	// --pink--c: var(--c--filled);
	// --gray--c: var(--c--filled);
	// ---

	--cMixPer--bg: 96%;
	--cMixPer--text: 24%;
	--cMixPer--bd: 80%;

	/* ------------------------------------------------------------
	    elements
	------------------------------------------------------------ */

	// --table--bdc:
	--th--bgc: var(--bgc--pale);

	// collape にしているので、tfoot 1pxだと見えないことに注意。
	--thead--border: solid 2px var(--b900);
	--tfoot--border: solid 2px var(--b900);
	--hr--color: var(--bdc--base);

	--link--c: #0c61e4;
	--link--underlineOffset: 0.2ex;

	--focus--color: revert;
	--focus--outlineOffset: 1px;

	--code--c: var(--b800);
	--code--bgc: var(--b100);
	// --code--bdc: var(--b300);

	/* ------------------------------------------------------------
	  カラー: ユーザー側で定義できる仕組みも必要
	------------------------------------------------------------ */
	// フィボナッチ数列 0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
	// 0 .25rem, .5rem, .75rem, 1.25rem, M:(8):2rem, 3.25rem, 5.25rem, 8.5rem

	// 30: 2rem 前後

	// --sUnit: 1rem;
	--s--0: 0rem;

	// 1=0.25での Fibonacci数列, 5は例外的に 0.125 をセット
	// --s--5: 0.25rem;
	// --s--10: 0.5rem;
	// --s--20: 0.75rem;
	// --s--30: 1.25rem;
	// --s--40: 2rem;
	// --s--50: 3.25rem;
	// --s--60: 5.25rem;
	// --s--70: 8.5rem;

	// 1=0.125 Fibonacci数列
	// --s--5: 0.125rem;
	--s--5: 0.25rem;
	--s--10: 0.375rem;
	// --s--15: 0.375rem;
	--s--20: 0.625rem;
	--s--30: 1rem;
	--s--40: 1.625rem;
	--s--50: 2.625rem;
	--s--60: 4.25rem;
	--s--70: 6.875rem;
	--s--80: 11.125rem;
	--s--90: 18rem;

	// ここから等比数列?
	// --s--70: calc(var(--s--60) * 1.5);
	// --s--80: calc(var(--s--70) * 1.5);
	// --s--90: calc(var(--s--80) * 1.5);

	// --em--1: 0.125em;
	--em--1: 0.125em;
	--em--2: 0.25em;
	--em--3: 0.375em;
	--em--5: 0.5em;
	--em--7: 0.75em;
	--em--10: 1em;
	--em--15: 1.5em;
	--em--20: 2em;
	--em--25: 2.5em;
	--em--30: 3em;

	// --p--box--s: 0.75em 0.875em;
	// --p:box:{padding: var(--p--box) calc(--p--box + 0.125em);}
	--p--box--s: 0.625em 0.75em;
	--p--box: 0.875em 1em;
	--p--box--l: 1.325em 1.5em;

	// .is--flow の blockGap 管理用変数
	--flowGap--s: var(--s--20); // --mbs--s?
	--flowGap--m: var(--s--40); // --mbs--m?
	--flowGap--l: var(--s--50);
	--flowGap--htag: 2.5em; // var(--s--50); // フォントサイズ依存

	/* ------------------------------------------------------------
	  radius
	------------------------------------------------------------ */
	// 10,20, ... ?
	// --r--?
	--radius--1: 0.125rem; // ≒ 2px
	--radius--2: 0.25rem; // ≒ 4px
	--radius--3: 0.5rem; // ≒ 8px
	--radius--4: 0.75rem; // ≒ 12px
	--radius--5: 1.25rem; // ≒ 20px
	--radius--6: 1.875rem; // ≒ 30px
	--radius--99: 999px;

	/* ------------------------------------------------------------
	  shadow
	------------------------------------------------------------ */

	--hsl--shadow: var(--hs--bc) 10%; //0 0% 0%;

	// x:y = 1:2 で統一。 layer的な考え方で、10,20...ではなく 1,2,...?
	--shadow-length--0: 0.5px 1px 2px 0px;
	--shadow-length--1: 0.5px 1px 4px 0px;
	--shadow-length--2: 1px 2px 8px 0px;
	--shadow-length--3: 2px 4px 16px 0px;
	--shadow-length--4: 4px 8px 32px 0px;
	// --shadow-length--5: 8px 16px 56px -1px;

	--shadow-alpha--low: 0.05;
	--shadow-color--low: hsl(var(--hsl--shadow) / var(--shadow-alpha--low));
	--shadow-alpha: 0.1;
	--shadow-color: hsl(var(--hsl--shadow) / var(--shadow-alpha));

	// ポイント:
	//    x:yのオフセット比率は一定に保つ. 1:2
	//    [blurサイズ - オフセット] の差は広がっていく
	//    base(0)のshadowを共通で付ける
	//    1段階前のshadowを薄めてつける

	// 共通で使う微量のshadow
	// --bxsh--N?
	--shadow--0: var(--shadow-length--0) var(--shadow-color--low);

	--shadow--1: var(--shadow--0), var(--shadow-length--1) var(--shadow-color);
	--shadow--2: var(--shadow-length--1) var(--shadow-color--low),
		var(--shadow-length--2) var(--shadow-color);
	--shadow--3: var(--shadow-length--2) var(--shadow-color--low),
		var(--shadow-length--3) var(--shadow-color);
	--shadow--4: var(--shadow-length--3) var(--shadow-color--low),
		var(--shadow-length--4) var(--shadow-color);

	--shadow--i1: inset var(--shadow--0), inset var(--shadow-length--1) var(--shadow-color);
	--shadow--i2: inset var(--shadow-length--1) var(--shadow-color--low),
		inset var(--shadow-length--2) var(--shadow-color);
	--shadow--i3: inset var(--shadow-length--2) var(--shadow-color--low),
		inset var(--shadow-length--3) var(--shadow-color);
	--shadow--i4: inset var(--shadow-length--3) var(--shadow-color--low),
		inset var(--shadow-length--4) var(--shadow-color);

	/* ------------------------------------------------------------
	  filter
	------------------------------------------------------------ */
	--filter--blur: blur(4px);
	// --filter--blur--l: blur(8px);
	--filter--lighten: brightness(1.15);
	--filter--darken: brightness(0.85);
}

// ↓ space: これでもわりとしっくりくる...？ 2:.25, 3: 0.375
// 10: .25
// 20: 0.375
// 30: 0.625
// 40: 1
// 50: 1.625
// 60: 2.625
// 70: 4.25
// 80: 6.875
// 90: 11.125
// 100: 18

// 暖色系テーマ
// --hs--bc: 15 12%;
// --b50: hsl(var(--hs--bc) 96%);
// --b100: hsl(var(--hs--bc) 92%);
// --b200: hsl(var(--hs--bc) 88%);
// --b800: hsl(var(--hs--bc) 30%);
// --b900: hsl(var(--hs--bc) 24%);
// --b950: hsl(var(--hs--bc) 16%);
