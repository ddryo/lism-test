/* ------------------------------------------------------------
	グローバルトークン。
	特定のセレクタに対する変数: --[target--]prop
	プリセット変数: --{prop}-{variant}
	
	ローカルな変数について
		自身のプロパティ: --{prop}
		子要素: --{item}--{prop}
			--rev--c, --icon--offset, --item--minW
 ------------------------------------------------------------ */
:root {
	/* ------------------------------------------------------------
	  コンテンツサイズ: ユーザー側で定義が必要
	    コンテンツサイズは960 ~ 1120 くらいがよさそう.
	    1080 にしてるのは、 1920 * 1080画像がきれいに配置できるため？
	------------------------------------------------------------ */
	// コンテンツサイズは960 ~ 1120 くらいがよさそう
	--ls--contentSize: 1120px; // = --wp--style--global--content-size.
	--ls--contentSize--wide: 1440px; // = --wp--style--global--wide-size. alignwide で使う.
	--ls--contentSize--slim: 45rem; // slim幅1カラムテンプレートで使う. fz:16px時 = 720px

	// is--flow, is-layout-[flow|constrained] > * + * の blockGap 管理用変数
	--ls--flowGap: var(--space--50);
	--ls--flowGap--heading: var(--space--60);

	// コンテンツの左右の余白
	--ls--gutter: clamp(1.5rem, 4vw, 2rem); // var(--space-50) とかを使うべきか？

	// ボーダーカラー
	// --ls--bdc--table: #dcdcdc;

	// hoverユーティリティ用 → --ls--?
	--hov--duration: 0.3s;

	/* ------------------------------------------------------------
	    タイポグラフィ
	------------------------------------------------------------ */
	--root--ff: sans-serif;
	// --root--fz: clamp(14px, 4vw, 1rem); // 1rem: ブラウザ標準はほぼ16px
	--root--fz: clamp(0.875rem, 0.625rem + 1vw, 1rem); // 400 - 600
	--root--lh: 1.75;

	// font-size 変数
	--fz--m: 1em;
	--fz--r: 1rem;
	// 倍音列(分子8) での計算値
	--fz--5xl: 4em; //calc(1em * 8 / 2);
	--fz--4xl: 2.667em; // calc(1em * 8 / 3);
	--fz--3xl: 2em; //calc(1em * 8 / 4);
	--fz--2xl: 1.6em; //calc(1em * 8 / 5);
	--fz--xl: 1.333em; //calc(1em * 8 / 6);
	--fz--l: 1.143em; //calc(1em * 8 / 7);
	--fz--s: 0.889em; // calc(1em * 8 / 9);
	--fz--xs: 0.8em; //calc(1em * 8 / 10);
	--fz--2xs: 0.727em; //calc(1em * 8 / 11);

	// clampでテキストサイズを変化させたい領域に指定する
	// --fz-fluid: clamp(0.9rem, 0.8rem + 0.5cqw, 1rem); // 小さい方向のみ. 320: .9rem ~ 640: 1rem
	--fz-fluid: clamp(0.9rem, 0.75rem + 0.8cqw, 1rem); // 小さい方向のみ. 300: .9rem ~ 500: 1rem

	// --fz-fluid: clamp(0.9rem, 0.8rem + 0.5cqw, 1.1rem); // 上下両方. 320: .9rem ~ 960: 1.1rem
	// --fz-fluid: clamp(0.9rem, 0.825rem + 0.4cqw, 1.1rem); // 上下両方. 300: .9rem ~ 1100: 1.1rem
	// --fz-fluid: clamp(0.9rem, 0.85rem + 0.27cqw, 1.05rem); // 上下両方. 300: .9rem ~ 1200: 1.05rem
	// --fz-fluid--l: clamp(1rem, 0.9rem + 0.25cqw, 1.1rem); // 大きい方向のみ 640: 1rem a~ 960: 1.1rem
	// clamp(0.9rem, 0.75rem + 0.75vw, 1.2rem); // 上下両方. 320: .9rem ~ 960: 1.2rem

	--ls--ff--emoji: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji',
		'Android Emoji', 'EmojiSymbols';

	// ------------------------------
	// line-height 変数
	// ------------------------------
	--ls--6L--lh: 1.2;
	--ls--5L--lh: 1.4;
	--ls--4L--lh: 1.4;
	--ls--3L--lh: 1.5;
	--ls--2L--lh: 1.6;
	--ls--L--lh: 1.6;
	// --lh--base: 1.75;

	// 1, xs          sm       md,  lg  xl
	// 1, 1.25, 1.4, 1.5, 1.6,  1.75, 2,  2.5

	// line-height 変数
	// --ls--lh--contents: 1.8;
	// --ls--lh--heading: 1.8;

	// chakra
	// normal: "normal",
	// none: 1,
	// shorter: 1.25,
	// short: 1.375,
	// base: 1.5,
	// tall: 1.625,
	// taller: "2",

	/* ------------------------------------------------------------
	  カラー: ユーザー側で定義できる仕組みも必要
	------------------------------------------------------------ */

	// --color--: 文字色・背景色など共通して採用されるカラー
	--main: #1e4e6b;
	// --main--c: #fff; // 背景が main の時の文字色
	--accent: #be3455;
	// --accent--c: #fff; // 背景が accent の時の文字色
	// --bgc--base: #fdfdfd; // 背景色メイン

	// ベースカラーに合わせたカラーを段階的に用意
	--hs--basic: 215 8%;
	--b50: hsl(var(--hs--basic) 99%); // 背景色
	--b100: hsl(var(--hs--basic) 96%); // 淡い背景色
	--b200: hsl(var(--hs--basic) 88%); // 少し濃い背景色 & ボーダー基本色もデフォルトはこれ
	// ...
	--b800: hsl(var(--hs--basic) 30%); // 淡い文字色 strong背景色
	--b900: hsl(var(--hs--basic) 16%); // 少しだけ淡い文字色. pre code などで使用
	--b950: hsl(var(--hs--basic) 8%); // 文字色

	// --pallete--?
	--black: #000;
	--white: #fff;
	--red: hsl(4 76% 52%); // #ef4444
	// --red--c: var(--c--filled);
	--orange: hsl(28 80% 52%); // #f97316
	// --orange--c: var(--c--filled);
	--yellow: hsl(52 88% 48%); //#f1b808
	// --yellow--c: #000;
	--green: hsl(148 84% 44%); //#10b981
	// --green--c: #000;
	--blue: hsl(200 80% 52%); //#0ea5e9
	// --blue--c: var(--c--filled);
	--purple: hsl(250 80% 60%); //#8b5cf6
	// --purple--c: var(--c--filled);
	--pink: hsl(325 76% 52%); //#ec4899
	// --pink--c: var(--c--filled);
	--gray: hsl(214 8% 48%); // #64748b;
	// --gray--c: var(--c--filled);

	// --c-: 文字色 に関するセマンティックトークン
	--c--base: var(--b900); // テキスト色
	--c--pale: var(--b800); // テキスト色
	--c--opposite: var(--b50); // 明暗反転色
	--c--filled: #fff; // variant="fill"系の文字色

	// --bgc-: 背景色 に関するセマンティックトークン
	--bgc--base: var(--b50);
	--bgc--pale: var(--b100);
	--bgc--strong: var(--b800);
	--bgc--opposite: var(--b900); // 明暗反転色

	// --bdc-: ボーダー色 に関するセマンティックトークン
	--bdc--base: var(--b200); // ボーダーカラー
	// --bdc--strong: var(--b800);

	// ---

	--cMixPer--bg: 95%;
	--cMixPer--text: 12%;
	--cMixPer--bd: 80%;

	/* ------------------------------------------------------------
	    elements
	------------------------------------------------------------ */

	--code--ff: Menlo, Consolas, monaco, monospace;
	--code--fz: 0.9em;
	--code--c: var(--b900);
	--code--bgc: var(--bgc--pale);
	--code--bdc: var(--bdc--base);

	// --table--bdc:
	--th--bgc: var(--bgc--pale);

	// collape にしているので、tfoot 1pxだと見えないことに注意。
	--thead--border: solid 2px var(--b900);
	--tfoot--border: solid 2px var(--b900);
	--hr--color: var(--bdc--base);

	--link--c: #0c61e4;
	--link--underlineOffset: 0.2ex;

	--focus--color: revert;
	--focus--outlineOffset: 1px;

	/* ------------------------------------------------------------
	  カラー: ユーザー側で定義できる仕組みも必要
	------------------------------------------------------------ */
	// フィボナッチ数列 0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
	// 0 .25rem, .5rem, .75rem, 1.25rem, M:(8):2rem, 3.25rem, 5.25rem, 8.5rem
	--space--0: 0rem;
	--space--5: 0.125rem;
	--space--10: 0.25rem;
	--space--15: 0.375rem;
	--space--20: 0.5rem;
	--space--25: 0.625rem;
	--space--30: 0.75rem;
	--space--35: 1rem;
	--space--40: 1.25rem;
	--space--45: 1.625rem;
	--space--50: 2rem;
	--space--55: 2.625rem;
	--space--60: 3.25rem;
	--space--65: 4.25rem;
	--space--70: 5.25rem;
	--space--80: 8.5rem;
	--space--90: 13.75rem;
	--space--100: 22.25rem;

	/* ------------------------------------------------------------
	  radius
	------------------------------------------------------------ */
	--radius--1: 2px;
	--radius--2: 5px;
	--radius--3: 8px;
	--radius--4: 0.75rem; //13px;
	--radius--5: 1.5rem; //21px;
	--radius--6: 3rem; //34px;
	--radius--99: 999px;

	/* ------------------------------------------------------------
	  shadow
	------------------------------------------------------------ */

	--shadow--hsl: 0 0% 0%;
	--shadowStrength--base: 0.06;
	--shadowStrength: 0.12;
	--shadowLength--0: 0.5px 1px 2px 0px;
	--shadowLength--1: 0.5px 1px 4px -1px;
	--shadowLength--2: 1px 2px 8px -1px;
	--shadowLength--3: 2px 4px 16px -1px;
	--shadowLength--4: 4px 8px 32px -1px;
	--shadowLength--5: 8px 16px 56px -1px;

	--shadowColor--low: hsl(var(--shadow--hsl) / var(--shadowStrength--base));
	--shadowColor: hsl(var(--shadow--hsl) / var(--shadowStrength));

	// ポイント:
	//    x:yのオフセット比率は一定に保つ. 1:2
	//    [blurサイズ - オフセット] の差は広がっていく
	//    base(0)のshadowを共通で付ける
	//    1段階前のshadowを薄めてつける

	--shadow--1: var(--shadowLength--0) var(--shadowColor--low),
		var(--shadowLength--1) var(--shadowColor);

	--shadow--2: var(--shadowLength--0) var(--shadowColor--low),
		var(--shadowLength--1) var(--shadowColor--low), var(--shadowLength--2) var(--shadowColor);

	--shadow--3: var(--shadowLength--0) var(--shadowColor--low),
		var(--shadowLength--2) var(--shadowColor--low), var(--shadowLength--3) var(--shadowColor);

	--shadow--4: var(--shadowLength--0) var(--shadowColor--low),
		var(--shadowLength--3) var(--shadowColor--low), var(--shadowLength--4) var(--shadowColor);

	--shadow--i1: inset var(--shadowLength--0) var(--shadowColor--low),
		inset var(--shadowLength--1) var(--shadowColor);

	--shadow--i2: inset var(--shadowLength--0) var(--shadowColor--low),
		inset var(--shadowLength--1) var(--shadowColor--low),
		inset var(--shadowLength--2) var(--shadowColor);

	--shadow--i3: inset var(--shadowLength--0) var(--shadowColor--low),
		inset var(--shadowLength--2) var(--shadowColor--low),
		inset var(--shadowLength--3) var(--shadowColor);

	--shadow--i4: inset var(--shadowLength--0) var(--shadowColor--low),
		inset var(--shadowLength--3) var(--shadowColor--low),
		inset var(--shadowLength--4) var(--shadowColor);

	// 1 にすると押し込むような感じになる
	--shadow--hov: var(--shadow--4);

	// ?
	// --hov--bgc--base: var(--b100);

	/* ------------------------------------------------------------
	    装飾
	------------------------------------------------------------ */
	--glass--blur: 20px;
}

// ↓ space: これでもわりとしっくりくる...？ 2:.25, 3: 0.375
// 10: .25
// 20: 0.375
// 30: 0.625
// 40: 1
// 50: 1.625
// 60: 2.625
// 70: 4.25
// 80: 6.875
// 90: 11.125
// 100: 18

// 暖色系テーマ
// --hs--basic: 15 12%;
// --b50: hsl(var(--hs--basic) 96%);
// --b100: hsl(var(--hs--basic) 92%);
// --b200: hsl(var(--hs--basic) 88%);
// --b800: hsl(var(--hs--basic) 30%);
// --b900: hsl(var(--hs--basic) 24%);
// --b950: hsl(var(--hs--basic) 16%);
