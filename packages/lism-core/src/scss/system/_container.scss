// .alignfull + .alignfull{
// 	margin-block-start: 0;
// }

// コンテナクエリの基点とする要素
.is--container {
	container-type: inline-size;
}

// 内部のコンテンツ幅を制御する
.is--constrained {
	container-type: inline-size;
	--maxW: min(100%, var(--ls--contentSize)); // -maxW: で上書きできるように

	// 左寄せ・右寄せ・全幅以外の要素に対して、max-widthを設定する?
	> :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
		max-width: var(--maxW);
		margin-right: auto !important;
		margin-left: auto !important;
	}

	// 幅広の場合はmax-widthを上書きする
	> .alignwide {
		max-width: var(--ls--contentSize--wide);
	}
}

// ?
.is--constrained.-slim {
	> :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
		max-width: var(--ls--contentSize--slim);
	}

	// 幅広の場合はmax-widthを上書きする
	> .alignwide {
		max-width: var(--ls--contentSize);
	}
}

// .has-global-padding はコア以外の要素で使うと想像した結果にならないことがあるので同じようなことをするクラスを作る
// .has--ls--gutter?　has--gutter?
.has--gutter {
	padding-right: var(--ls--gutter);
	padding-left: var(--ls--gutter);

	> .alignfull {
		// --pl, --pr > --padding > --ls--gutter
		margin-right: calc(var(--ls--gutter) * -1);
		margin-left: calc(var(--ls--gutter) * -1);
	}
}
