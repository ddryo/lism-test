// has--border?
// bdc だけとかの指定でも -bd:出力？
/*
	borderはかなり特殊。
	--bds, --bdw, --bdc で管理できるようにしていて、そのために基本的に .-bd: クラスを使う。
	各方向も、 -bd:left, -bd:right など。　( -bd: で全方向。)

	.-bd:{preset}: 方向 or ボーダー用のセマンティックプリセット。

	まず bd を指定してもらう。
	bdc, bdw などを追加で指定。

*/
:root {
	// --bdw--thin: thin;
	// --bdw--medium: medium;
	// --bdw--thik: thik;
}

// bdc, bdw などでカラーや太さを上書きできるように border 自体を変数管理

// root定義でもよさそう? → 入れ子のときに影響受けてしまう
:where([class*='-bd:']) {
	--bds: solid;
	--bdw: 1px;
	--bdc: currentColor; //var(--bdc--base);
}

// 使用される環境（resetCSS）によって挙動が変わりやすいので 各プロパティを変数で管理する。
// ブラウザのデフォルト挙動では、bds指定でborder出現してくるが、nextraのresetCSSみたいな特殊な環境だとbdwの指定でborderでてきたりする。
.-bd\: {
	--bd: var(--bdw) var(--bds) var(--bdc);
	border: var(--bd);
}
// .-bd\:cc {
// 	border: var(--bdw) var(--bds) currentColor;
// 	// --bdc: currentColor;
// }
// .-bd\:t {
// 	border: var(--bdw) var(--bds) transparent;
// }
// .-bd\:base {
// 	border: var(--bdw) var(--bds) var(--bdc--base);
// }
.-bd\:emphasis {
	--bds: double;
	--bdw: 5px;
	border: var(--bdw) var(--bds) var(--bdc);
	// border: 5px double currentColor;
}
.-bd\:guide {
	--bds: dashed;
	--bdc: rgba(160, 160, 160, 0.4);
	border: var(--bdw) var(--bds) var(--bdc);
	// border: 1px dashed rgba(160, 160, 160, 0.4);
}

// regular? default? normal? base?
// .-bd\:normal{border: var(--bdw) var(--bds) var(--c--border)}

// style固定での初期プリセット的なやつ?
// .-bd\:solid{--bd: 1px solid var(--c--border)}
// .-bd\:dashed{--bd: 1px dashed var(--c--border)}

// 方向を分けて使用する場合、 bdw, bdc, bds と併用してもらう？
// bd='l', bd='l,r',bd='t,b',...コンマ区切り→成分指定
// bd={{left: , right: ,}} → --bdl, --bdr
// bdl=, bdr=, → --bdl, --bdr

// 一方向のみborderを出現させたい時
.-bd\:left {
	border-left: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:right {
	border-right: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:top {
	border-top: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:bottom {
	border-bottom: var(--bdw) var(--bds) var(--bdc);
}

// inline-startとかは？
.-bd\:inline {
	border-inline: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:block {
	border-block: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:in-s {
	border-inline-start: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:in-e {
	border-inline-end: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:bl-s {
	border-block-start: var(--bdw) var(--bds) var(--bdc);
}
.-bd\:bl-e {
	border-block-end: var(--bdw) var(--bds) var(--bdc);
}

// bd, bdl, bdr,...
// .-bdl{}
// .-bdl {
// 	border-left: var(--bdw) var(--bds) var(--bdc);
// }
// .-bdl\: {
// 	border-left: var(--bdl);
// }
// .-bdr\:{border-right: var(--bdr);}
// .-bdt\:{border-top: var(--bdt);}
// .-bdb\:{border-bottom: var(--bdb);}

.-bdl\:n {
	border-left: none;
}
.-bdr\:n {
	border-right: none;
}
.-bdt\:n {
	border-top: none;
}
.-bdb\:n {
	border-bottom: none;
}

// bdw="1px 1px 0 0" とかでも指定できる
// .-bdw\:{border-width: var(--bdw);}
// .-bdw\:1{--bdw: 1px;}

// thin, medium, thick?
// .-bdw\:medium{--bdw: var(--bdw--medium)}

// .-bdc\:{border-color: var(--bdc);}

.-bdc\: {
	--bdc: inherit;
}
.-bdc\:main {
	--bdc: var(--main);
}
.-bdc\:accent {
	--bdc: var(--accent);
}
.-bdc\:base {
	--bdc: var(--bdc--base);
}
// .-bdc\:strong {
// 	--bdc: var(--bdc--strong);
// }
.-bdc\:t {
	--bdc: var(--bd--transparent);
}
.-bdc\:cc {
	--bdc: currentColor;
}
// .-bdc\:white {
// 	--bdc: var(--white);
// }
// .-bdc\:black {
// 	--bdc: var(--black);
// }

// border-style使うと全方向にborder出てくることに注意。
// bds→ --bdsのみ出力。 borderStyle→border-style出力
// .-bds\:{border-style: var(--bds);}

// .-bds\:n{border-style:none;}
// .-bds\:h{border-style:hidden;}
.-bds\:dt {
	--bds: dotted;
}
.-bds\:ds {
	--bds: dashed;
}
.-bds\:s {
	--bds: solid;
}
.-bds\:db {
	--bds: double;
}

// bds,borderSolidで挙動変える？
