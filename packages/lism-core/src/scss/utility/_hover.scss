// .-hov\: ユーティリティ

@layer lism-init {
	:root {
		--hov--shadow: var(--shadow--4);
		--hov--bgc: var(--bgc--pale);
	}
	// .-hov\:bgc\: {
	// 	--hov--bgc: var(--bgc--pale);
	// }
	.-hov\:reverse {
		--rev--c: var(--hov--c, var(--bgc)); // .-hov:c: あれば優先
		--rev--bgc: var(--hov--bgc, var(--c));
	}
}

[class*='-hov:'] {
	transition: filter, opacity, box-shadow, translate, scale, border-color, color, background-color;
	transition-duration: var(--hov--duration);

	// mediaへのホバー効果
	.l--layer__media {
		transition: filter, scale;
		transition-duration: var(--hov--duration);
	}
}

// 値指定
// .-hov\:duration\:{}
.-hov\:c\::hover {
	color: var(--hov--c) !important;
}

// [class*='-hov:bgc:']:hover,
.-hov\:bgc\::hover {
	background-color: var(--hov--bgc) !important;
}
.-hov\:bdc\::hover {
	border-color: var(--hov--bdc) !important;
}
.-hov\:shadow\::hover {
	box-shadow: var(--hov--shadow) !important;
}

// .-hov\:bgc\:b100 {
// 	--hov--bgc: var(--b100);
// }
// .-hov\:bgc\:b200 {
// 	--hov--bgc: var(--b200);
// }
// .-hov\:bgc\:b900 {
// 	--hov--bgc: var(--b900);
// }

// プリセット

.-hov\:dark:hover {
	filter: brightness(0.8) contrast(1.2); //grayscale(5%);
}
// .-hov\:bright:hover {
// 	filter: brightness(1.2) contrast(1.2); //grayscale(5%);
// }

.-hov\:fade:hover {
	opacity: 0.75;
}
.-hov\:shadow:hover {
	// shadowユーティリティに負けないように important
	box-shadow: var(--hov--shadow) !important;
}
.-hov\:up:hover {
	translate: 0 -3px;
}
.-hov\:scale:hover {
	scale: 1.05;
}

// .-hov\:reverse {
// 	--rev--c: var(--hov--c, var(--bgc)); // .-hov:c: あれば優先
// 	--rev--bgc: var(--hov--bgc, var(--c));
// }

.-hov\:reverse:hover {
	background-color: var(--rev--bgc) !important;
	color: var(--rev--c) !important;
}

// .is--fadeInItemとセットで使う
// hov:fadeIn

// ------------------------------------------------------------
// hov:media:
// .is--transitionMedia とセットで使う
// ------------------------------------------------------------

[class*='-hov:media'] {
	--mediaFilter: unset;
	--mediaScale: unset;
}

// .-hov:media:XXX で変化可能なメディア
.is--transitionMedia {
	// .-hov:media:用
	scale: var(--mediaScale);
	filter: var(--mediaFilter);
	transition: filter, scale;
	transition-duration: var(--hov--duration);
}

.-hov\:mediaZoom:hover {
	--mediaScale: 1.1;
}
// ※ filter どうしの同時使用はできないことに注意
.-hov\:mediaDark:hover {
	--mediaFilter: brightness(0.9);
}
.-hov\:mediaBright:hover {
	--mediaFilter: brightness(1.1);
}
.-hov\:mediaBlur:hover {
	--mediaFilter: blur(4px);
}

// ; transform: trf
// hov: {c, bgc, bdc, radius, shadow, transform?, filter?}
