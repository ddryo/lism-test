// gap値は横幅計算等に使用することもあるので、 row, colm それぞれに変数データをもたせている。
//    ( fxb = calc(width - colmg) みたいな使い方をしたい時がある )
// ただし、 --gap は 単一値（row と colm が同じ値）のみ指定する必要がある。
//    → コンポーネント側で、gap="1em 2em" のように分割指定されていれば、変数を自動で分けるように処理している。

// .has--gap,
// cssファイルからCSS変数指定だけでクエリ対応できるように gap はここで定義しておく。
:where( .is--flex, .is--grid ) {
	--gap--default: var(--space--50); // ここで初期値与えるべきかは要検討
}
.is--flex,
.is--grid{
	--gap: var(--gap--default); // ここで初期値与えるべきかは要検討
	// --gap--sm: var(--gap);
	// --gap--xs: var(--gap--sm);
	gap: var(--gap);

	// @container (max-width: 720px) {
	// 	gap: var(--gap--sm);
	// }

	// @container (max-width: 440px) {
	// 	gap: var(--gap--xs);
	// }
}


// [class*="-gap:"]{
// 	gap: var(--gap) !important;
// }

[class*="-colmg:"]{
	column-gap: var(--colmg) !important;
}

[class*="-rowg:"]{
	row-gap: var(--rowg) !important;
}

// [data-padding="p@_, pt@sm "]
@container (max-width: 720px) {

	.-gap\@sm\:{
		gap: var(--gap--sm) !important;
	}
	.-colmg\@sm\: {
		column-gap: var(--colmg--sm) !important;
	}
	.-rowg\@sm\: {
		row-gap: var(--rowg--sm) !important;
	}
}

@container (max-width: 440px) {
	.-gap\@xs\: {
		gap: var(--gap--xs) !important;
	}
	.-colmg\@xs\: {
		column-gap: var(--colmg--xs) !important;
	}
	.-rowg\@xs\: {
		row-gap: var(--rowg--xs) !important;
	}
}


@for $i from 0 through 5 {
	.-gap\:#{$i * 10} {
		--gap: var(--space--#{$i * 10});
	}
	.-colmg\:#{$i * 10} {
		--colmg: var(--space--#{$i * 10});
	}
	.-rowg\:#{$i * 10} {
		--rowg: var(--space--#{$i * 10});
	}

	// .-gap\@sm\:#{$i * 10} {
	// 	--gap--sm: var(--space--#{$i * 10});
	// }
	// .-colmg\@sm\:#{$i * 10} {
	// 	--colmg--sm: var(--space--#{$i * 10});
	// }
	// .-rowg\@sm\:#{$i * 10} {
	// 	--rowg--sm: var(--space--#{$i * 10});
	// }

	// .-gap\@xs\:#{$i * 10} {
	// 	--gap--xs: var(--space--#{$i * 10});
	// }
	// .-colmg\@xs\:#{$i * 10} {
	// 	--colmg--xs: var(--space--#{$i * 10});
	// }
	// .-rowg\@xs\:#{$i * 10} {
	// 	--rowg--xs: var(--space--#{$i * 10});
	// }
}
