/* 参考
	ress https://github.com/filipelinhares/ress/blob/master/ress.css
	https://elad2412.github.io/the-new-css-reset/
*/

/* 方針
	reset.cssの段階では、できるだけブラウザの標準スタイルに従う感じで。
	→ 主要なタグはlism変数で初期スタイルをセットする。

	box-sizing: border-box; にセット
	margin はすべて 0
	padding は そのまま

*/

/* box-sizing: border-box にセット */

@layer reset {
	*,
	::before,
	::after {
		box-sizing: border-box;
	}

	/* Reset `padding` and `margin` of all elements */
	* {
		margin: 0;

		/* padding: 0; */
	}

	html,
	body {
		height: 100%;
	}

	body {
		-moz-tab-size: 4;
		tab-size: 4;

		/*
			iOSで横向きにした時のフォントサイズ自動調節をオフに　する。
			none はバグがあったので 100%.(今はもう大丈夫かも)
		*/
		text-size-adjust: 100%;

		/*  テキストのレンダリングを改善 → font によっては薄くなりすぎる */
		/* -webkit-font-smoothing: antialiased; */
	}

	/* 親要素を飛び出さないように */
	pre {
		/* overflow-inline: auto; ← まだ使えない */
		overflow-x: auto; /* 縦書きモードにしてもこれでいける */
	}

	/* ルビのサイズ統一 */
	ruby > rt {
		font-size: 50%;
	}

	/* 画像を扱いやすく */
	img,
	svg {
		/* 親要素をはみ出さないように */
		/* images should never overflow past the available space */
		max-inline-size: 100%;
		block-size: auto; /* かつ、アスペクト比を保持 */

		/* 隙間ができるのを防ぐ。 インラインな img, svg を考慮し、 display はいじらない。 */
		vertical-align: middle;
	}

	/* audio, embed, object? */

	iframe,
	audio,
	picture,
	video {
		display: block;

		// max-width: 100%;
		max-inline-size: 100%;
	}

	iframe {
		border: none;
	}

	/* テキストのオーバーフローを回避 */
	:where(p, h1, h2, h3, h4, h5, h6) {
		overflow-wrap: break-word;
	}

	/* フォーム要素のフォントとカラーをリセット */
	:where(input, button, textarea, select) {
		font: inherit;
		color: inherit;
	}

	/* テキストエリアの水平リサイズを無効に */
	textarea {
		resize: vertical;
	}

	/* Remove the inheritance of text transform in Edge, Firefox, and IE.  */
	button,
	select {
		text-transform: none;
	}

	/* rangeコントロールの位置調整　→ flexで並べて使えばよい */

	/* [type='range'] {vertical-align: middle;} */

	/*
		カーソル
	*/

	/* pointer */
	button,
	label,
	select,
	summary,
	[type='button'],
	[type='reset'],
	[type='submit'],
	[type='radio'],
	[type='checkbox'],
	[role='button'],
	[role='option'],
	[aria-controls] {
		cursor: pointer;
	}

	/* disabled をよりわかりやすく */
	:disabled {
		cursor: not-allowed;
	}

	/* Specify the progress cursor of updating elements */
	[aria-busy='true'] {
		cursor: progress;
	}

	/* fill指定のない　svg　にテキストカラーを継承させる */
	svg:not([fill]) {
		fill: currentcolor;
	}
}
